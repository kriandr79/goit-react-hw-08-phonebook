{"version":3,"file":"static/js/641.83c22bde.chunk.js","mappings":"yMAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,E,2BCyChC,MAnCA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAeF,EAAAA,EAAAA,IAAYP,IAGjCU,EAAAA,EAAAA,YAAU,WACRN,GAASO,EAAAA,EAAAA,MACV,GAAE,CAACP,IAGJ,IAGMQ,EAAmBN,EAAYO,cAC/BC,EAAmBL,EAAaM,QAAO,SAAAC,GAAO,OAClDA,EAAQC,KAAKJ,cAAcK,SAASN,EADc,IAIpD,OACE,+BACE,wBACGE,EAAiBK,KAAI,gBAAGF,EAAH,EAAGA,KAAMG,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,GAAjB,OACpB,0BACGJ,EADH,KACWG,EAAQ,KACjB,mBAAQE,KAAK,SAASC,QAAS,kBAdnBC,EAcuCH,EAd1BjB,GAASqB,EAAAA,EAAAA,IAAcD,IAApC,IAAAA,CAcmB,EAA/B,sBAFOH,EADW,OAW7B,ECZD,MAxBA,WACE,IAAMf,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BJ,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iCACE,sCACA,8CAEE,kBACEiB,KAAK,OACLL,KAAK,SACLS,MAAOpB,EACPqB,SAZa,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAH,OACnBxB,GAASyB,EAAAA,EAAAA,IAAWD,EAAcF,OADf,SAiBtB,E,SCxBD,EAA0B,sBAA1B,EAAuD,mBAAvD,EAAgF,kBC+EhF,MA1EA,YAA4B,EAAZI,SAAa,IAC3B,GAAwBC,EAAAA,EAAAA,YAAxB,eAAOd,EAAP,KAAae,EAAb,KACA,GAA4BD,EAAAA,EAAAA,YAA5B,eAAOX,EAAP,KAAea,EAAf,KAEM7B,GAAWC,EAAAA,EAAAA,MACXI,GAAeF,EAAAA,EAAAA,IAAYP,GAE3BkC,EAAc,SAAAC,GAClB,MAAwBA,EAAEP,cAAlBX,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAEd,OAAQT,GACN,IAAK,OACHe,EAAQN,GACR,MACF,IAAK,SACHO,EAAUP,GACV,MACF,QACEU,QAAQC,IAAI,SAEjB,EAcKC,EAAQ,WACZN,EAAQ,IACRC,EAAU,GACX,EAED,OACE,iCACE,wCACA,gBAAKM,UAAWC,EAAhB,UACE,kBAAMD,UAAWC,EAAUV,SApBR,SAAAK,GACvBA,EAAEM,iBACEhC,EAAaiC,MAAK,SAAA1B,GAAO,OAAIA,EAAQC,OAASA,CAArB,IAC3B0B,MAAM,GAAD,OAAI1B,EAAJ,0CAIPb,GAASwC,EAAAA,EAAAA,IAAW,CAAE3B,KAAAA,EAAMG,OAAAA,KAC5BkB,IACD,EAWK,WACE,8BACE,kCACA,kBACEhB,KAAK,OACLL,KAAK,OACLS,MAAOT,EACPU,SAAUO,EACVW,UAAQ,QAGZ,8BACE,oCACA,kBACEvB,KAAK,MACLL,KAAK,SACLS,MAAON,EACPO,SAAUO,EACVY,QAAQ,YACRD,UAAQ,QAGZ,mBAAQN,UAAWC,EAASlB,KAAK,SAAjC,gCAOT,EC/DD,EAXiB,WACf,OACE,iCACE,4CACA,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { getFilter } from '../../redux/contacts/filterSlice';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/operations';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(getFilter);\n  const contactsList = useSelector(getContacts);\n\n  // Завантаження списку контактів\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  // Видалення контакту\n  const removeContact = contactId => dispatch(deleteContact(contactId));\n\n  // Отримання відфільтрованих контактів\n  const normalazedFilter = filterValue.toLowerCase();\n  const filteredContacts = contactsList.filter(contact =>\n    contact.name.toLowerCase().includes(normalazedFilter)\n  );\n\n  return (\n    <>\n      <ul>\n        {filteredContacts.map(({ name, number, id }) => (\n          <li key={id}>\n            {name}: {number}{' '}\n            <button type=\"button\" onClick={() => removeContact(id)}>\n              delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { makeFilter, getFilter } from '../../redux/contacts/filterSlice';\n\nfunction Filter() {\n  const filterValue = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  // Збереження значення фільтру\n  const handleFilter = ({ currentTarget }) =>\n    dispatch(makeFilter(currentTarget.value));\n\n  return (\n    <>\n      <h2>Contacts</h2>\n      <label>\n        Find contact:\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filterValue}\n          onChange={handleFilter}\n        />\n      </label>\n    </>\n  );\n}\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"formdiv\":\"Form_formdiv__8u5jV\",\"form\":\"Form_form__e1yzW\",\"btn\":\"Form_btn__0ebGo\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport css from './Form.module.css';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState();\n  const [number, setNumber] = useState();\n\n  const dispatch = useDispatch();\n  const contactsList = useSelector(getContacts);\n\n  const handleInput = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log('ERROR');\n    }\n  };\n\n  // Сабміт форми - додаємо контакт\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (contactsList.find(contact => contact.name === name)) {\n      alert(`${name} is already exist in the numberbook!`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <h2>numberbook</h2>\n      <div className={css.formdiv}>\n        <form className={css.form} onSubmit={handleFormSubmit}>\n          <label>\n            <p>Name:</p>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleInput}\n              required\n            />\n          </label>\n          <label>\n            <p>Number:</p>\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={handleInput}\n              pattern=\"[0-9\\-]+\"\n              required\n            />\n          </label>\n          <button className={css.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default Form;\n","import ContactList from \"components/ContactsList/ContactsList\";\nimport Filter from \"components/Filter/Filter\";\nimport Form from \"components/Form/Form\";\n\nconst Contacts = () => {\n  return (\n    <>\n      <div>Contacts Page</div>\n      <Form />\n      <Filter/>\n      <ContactList/>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContacts","state","contacts","items","dispatch","useDispatch","filterValue","useSelector","getFilter","contactsList","useEffect","fetchContacts","normalazedFilter","toLowerCase","filteredContacts","filter","contact","name","includes","map","number","id","type","onClick","contactId","deleteContact","value","onChange","currentTarget","makeFilter","onSubmit","useState","setName","setNumber","handleInput","e","console","log","reset","className","css","preventDefault","find","alert","addContact","required","pattern"],"sourceRoot":""}