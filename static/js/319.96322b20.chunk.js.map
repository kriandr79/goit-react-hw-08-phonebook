{"version":3,"file":"static/js/319.96322b20.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactslist\":\"ContactsList_contactslist__TtVWI\",\"items\":\"ContactsList_items__TY5P-\",\"name\":\"ContactsList_name__cbzy1\",\"number\":\"ContactsList_number__9xIVj\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { getFilter } from '../../redux/contacts/filterSlice';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/operations';\nimport css from './ContactsList.module.css'\nimport { Button } from 'components/Button/Button';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(getFilter);\n  const contactsList = useSelector(getContacts);\n\n  // Завантаження списку контактів\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  // Видалення контакту\n  const removeContact = contactId => dispatch(deleteContact(contactId));\n\n  // Отримання відфільтрованих контактів\n  const normalazedFilter = filterValue.toLowerCase();\n  const filteredContacts = contactsList.filter(contact =>\n    contact.name.toLowerCase().includes(normalazedFilter)\n  );\n\n  console.log(filteredContacts)\n  return filteredContacts.length > 0 ? (\n    <>\n      <h2>Conctacts ({filteredContacts.length}):</h2>\n\n      <ul className={css.contactslist}>\n        {filteredContacts.map(({ name, number, id }) => (\n          <li key={id} className={css.items}>\n            <span className={css.name}>{name}</span>\n            <span className={css.number}>{number}</span>\n            <Button type=\"submit\" btnstyle=\"delete\" onClick={() => removeContact(id)}>\n              delete\n            </Button>\n          </li>\n        ))}\n      </ul>\n    </>\n  ) : (\n    <h2>No contacts have found...</h2>\n  );\n}\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { makeFilter, getFilter } from '../../redux/contacts/filterSlice';\nimport css from './Filter.module.css'\n\nfunction Filter() {\n  const filterValue = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  // Збереження значення фільтру\n  const handleFilter = ({ currentTarget }) =>\n    dispatch(makeFilter(currentTarget.value));\n\n  return (\n    <>\n      <label className={css.filter}>\n        <span>Quick contact find: </span>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filterValue}\n          onChange={handleFilter}\n        />\n      </label>\n    </>\n  );\n}\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"formdiv\":\"Form_formdiv__8u5jV\",\"form\":\"Form_form__e1yzW\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport css from './Form.module.css';\nimport { Button } from 'components/Button/Button';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState();\n  const [number, setNumber] = useState();\n\n  const dispatch = useDispatch();\n  const contactsList = useSelector(getContacts);\n\n  const handleInput = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log('ERROR');\n    }\n  };\n\n  // Сабміт форми - додаємо контакт\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (contactsList.find(contact => contact.name === name)) {\n      alert(`${name} is already exist in the numberbook!`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <div className={css.formdiv}>\n        <form className={css.form} onSubmit={handleFormSubmit}>\n          <label>\n            <p>Name:</p>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleInput}\n              required\n              placeholder='Ilon Musk'\n            />\n          </label>\n          <label>\n            <p>Number:</p>\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={handleInput}\n              pattern=\"[0-9\\-]+\"\n              required\n              placeholder='999 999-999-999'\n            />\n          </label>\n          <Button type=\"submit\" btnstyle=\"newcontact\">\n            Add New Contact\n          </Button>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default Form;\n","import ContactList from \"components/ContactsList/ContactsList\";\nimport Filter from \"components/Filter/Filter\";\nimport Form from \"components/Form/Form\";\n\nconst Contacts = () => {\n  return (\n    <>\n      <h1>My Contacts</h1>\n      <Form />\n      <Filter/>\n      <ContactList/>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContacts","state","contacts","items","dispatch","useDispatch","filterValue","useSelector","getFilter","contactsList","useEffect","fetchContacts","normalazedFilter","toLowerCase","filteredContacts","filter","contact","name","includes","console","log","length","className","css","map","number","id","Button","type","btnstyle","onClick","contactId","deleteContact","value","onChange","currentTarget","makeFilter","onSubmit","useState","setName","setNumber","handleInput","e","reset","preventDefault","find","alert","addContact","required","placeholder","pattern"],"sourceRoot":""}